import fs from "fs";
import keyword_extractor from "keyword-extractor";

const keywords = [
  "laravel",
  "react",
  "redux",
  "vue",
  "angular",
  "javascript",
  "wordpress",
  "semantic",
  "a11y",
  "accessibility",
  "html",
  "css",
  "command line",
  "github",
  "agile",
  "php",
  "python",
  "sql",
  "clean",
  "scalable",
  "cms",
  "content management system",
  "dxp",
  "digital experience",
  "headless",
  "ecm",
  "enterprise",
  "digital asset management",
  "dam",
  "quality assurance",
  "testing",
  "next",
  "babel",
  "sass",
  "scss",
  "webpack",
  "html5",
  "rest",
  "photoshop",
  "ada",
  "graphic design",
  "seo",
  "search engine optimization",
  "moodle",
  "aws",
  "508",
  "wcag",
  "metadata",
  "cross-browser compatibility",
  "drupal",
  "input validation",
  "xss",
  "csrf",
  "cors",
  "frs",
  "functional requirement specifications",
  "software requirement specifications",
  "business requirements document",
  "srs",
  "brd",
  "node",
  "nodejs",
  "preprocess",
  "pre-process",
  "reusable components",
  "frontend",
  "backend",
  "umi",
  "api",
  "java",
  "dom",
  "http",
  "ajax",
  "xhr",
  "fetch",
  "axios",
  "c++",
  "c program",
  "rust",
  "web services",
  "soa",
  "service-oriented architecture",
  "eai",
  "enterprise application integration",
  "soap",
  "simple object access protocol",
  "saas",
  "software as a service",
  "paas",
  "graphdb",
  "graphql",
  "graph",
  "ui",
  "ux",
  "hci",
  "security",
  "xml",
  "json",
  "fiori",
  "sap",
  "oop",
  "object-oriented programming",
  "widget",
  "theme",
  "template",
  "wordpress network",
  "multisite",
  "jquery",
  "mysql",
  "dynamodb",
  "lightsail",
  "terraform",
  "trpc",
  "django",
  "flask",
  "asp.net",
  "spring boot",
  "spring",
  "database",
  "documentation",
  "ruby",
  "ruby on rails",
  "rails",
  "object oriented programming",
  "gui",
  "ecmascript",
  "typescript",
  "css3",
  "responsive web design",
  "functional programming",
  "mvc",
  "model-view-controller",
  "figma",
  "webflow",
  "email",
  "coldfusion",
  "dreamweaver",
  "actionscript",
  "backbone",
  "ember",
  "less",
  "prisma",
  "styled components",
  "css-in-js",
  "tailwind",
  "headlessui",
  "chakra",
  "astro",
  "cloudinary",
  "firebase",
  "strapi",
  "svelte",
  "web speech",
  "reveal",
  "elasticsearch",
  "jsonwebtoken",
  "jwt",
  "ec2",
  "s3",
  "shopify",
  "dva",
  "react-hook-form",
  "formik",
  "materialui",
  "bootstrap",
  "cookie",
  "unity",
  "three",
  "d3",
  "lodash",
  "framer",
  "scrum",
  "unit test",
  "integration test",
  "e2e",
  "cypress",
  "enzyme",
  "jest",
  "mocha",
  "chai",
  "flux",
  "design pattern",
  "data structures",
  "algorithm",
  "leetcode",
  "hackerrank",
  "ionic",
  "flutter",
  "react native",
  "electron",
  "laminas",
  "symfony",
  "magento",
  "j2ee",
  "solidity",
  "perl",
  "linux",
  "unix",
  "emacs",
  "vim",
  "memcache",
  "redis",
  "elastic compute",
  "rds",
  "relational database services",
  "mariadb",
  "oracle",
  "aurora",
  "storybook",
  "lambda",
  "cloudfront",
  "glacier",
  "sns",
  "ebs",
  "vpc",
  "kinesis",
  "iam",
  "sqs",
  "beanstalk",
  "elasticache",
  "redshift",
  "sagemaker",
  "elastic file system",
  "efs",
  "cognito",
  "docker",
  "kubernetes",
  "container",
  "mongodb",
  "azure",
  "digitalocean",
  "subversion",
  "svn",
  "mobile-first",
  "material",
  "c#",
  "analytics",
  "apache",
  "nginx",
  "ci/cd",
  "jenkins",
  "www",
  "dns",
  "flexbox",
  "grid",
  "es6",
  "gitlab",
  "bitbucket",
  "owasp",
  "content security policy",
  "https",
  "tls",
  "ssl",
  "handshake",
  "bem",
  "postcss",
  "esbuild",
  "rollup",
  "parcel",
  "vite",
  "prettier",
  "eslint",
  "css module",
  "jsx",
  "emotion",
  "custom element",
  "shadow dom",
  "bulma",
  "radix",
  "testing library",
  "storage",
  "socket.io",
  "web socket",
  "prpl",
  "solid",
  "dry",
  "yagni",
  "fcp",
  "lcp",
  "singleton",
  "provider",
  "observer",
  "module",
  "mixin",
  "hook",
  "factory",
  "csr",
  "ssr",
  "hydration",
  "tree shaking",
  "lighthouse",
  "internationalization",
  "rail",
  "gatsby",
  "web assembly",
  "wasm",
  "blazor",
  "golang",
  "postgresql",
  "orm",
  "acid",
  "normalization",
  "shard",
  "cap",
  "influxdb",
  "oauth",
  "grpc",
  "cdn",
  "monolithic",
  "microservice",
  "microfrontend",
  "serverless",
  "rabbitmq",
  "kafka",
  "neo4j",
  "caddy",
  "trello",
  "slack",
  "kotlin",
  "scala",
  "hash",
  "hadoop",
  "bpm",
  "bpel",
  "w3c",
  "pwa",
  "uml",
  "i/o",
  "posix",
  "centos",
  "ubuntu",
  "rhel",
  "freebsd",
  "bash",
  "nano",
  "powershell",
  "ftp",
  "ssh",
  "port forward",
  "consul",
  "istio",
  "ansible",
  "github action",
  "circle ci",
  "prometheus",
  "grafana",
  "datadog",
  "loki",
  "jaeger",
  "new relic",
  "google cloud",
  "apollo",
  "rtk",
  "balsamiq",
  "sketch",
  "inkscape",
  "illustrator",
  "creative cloud",
  "invision",
  "powerpoint",
  "word",
  "box",
  "dropbox",
  "ai",
  "ml",
  "npm",
  "selenium",
  "jsp",
  "cgi",
  "a/b test",
  "jsdoc",
  "inheritance",
  "polymorphism",
  "abstraction",
  "encapsulation",
  "kernel",
  "mobx",
  "zustand",
  "load balanc",
  "clojure",
  "matlab",
  "data science",
  "ms sql",
  "excel",
  "filemaker",
  "nlp",
  "solr",
  "mime",
  "captcha",
  "struts",
  "flash",
  "thunk",
  "react router",
  "jasmine",
  "yaml",
  "handlebars",
  "grunt",
  "gulp",
  "ant",
  ".net",
  "entity framework",
  "nunit",
  "cakephp",
  "bindows",
  "voldemort",
  "lucene",
  "websocket",
  "vbscript",
  "lightning",
  "sdlc",
  "jpa",
  "hibernate",
  "jsf",
  "wicket",
  "gwt",
  "jstl",
  "xlst",
  "xsd",
  "firewall",
  "soar",
  "go",
  "erlang",
  "ocaml",
  "rdbms",
  "zend",
  "yii",
  "eclipse",
  "xcode",
  "cvs",
  "concurrent version system",
  "highchart",
  "react flow",
  "winform",
  "linq",
  "dapper",
  "wcf",
  "windows communication foundation",
  "sqlite",
  "saga",
  "taskscheduler",
  "spa",
  "reactive",
  "karma",
  "sveltekit",
  "nx",
  "vscode",
  "visual studio",
  "sublime",
  "iot",
  "ar",
  "vr",
  "mr",
  "openxr",
  "mrtk",
  "oculus",
  "openvr",
  "stencil",
  "cucumber",
  "pytest",
  "robot",
  "jira",
  "guru",
  "salesforce",
  "developer tools",
  "appium",
  "confluence",
  "java server pages",
  "common gateway interface",
  "express",
  "protractor",
  "supabase",
  "nim",
  "godot",
  "lisp",
  "quik",
  "pocketbase",
  "surrealdb",
  "hugo",
  "tensorflow",
  "solidjs",
  "web3",
  "redwood",
  "tauri",
  "nuxt",
  "assembly",
  "parallax",
  "elixir",
  "passport",
  "wireframe",
  "mockup",
  "asynchronous",
  "closure",
  "promise",
  "postman",
  "sqa",
  "monorepo",
  "composer",
  "fastapi",
  "slimphp",
  "smarty",
  "webgl",
  "tdd",
  "bdd",
  "mean",
  "mern",
  "polymer",
  "svg",
  "bitcoin",
  "ethereum",
  "shell",
  "dart",
  "r lang",
  "julia",
  "haskell",
  "delphi",
  "apl",
  "crystal",
  "cobol",
  "microsoft sql server",
  "ibm db2",
  "couchbase",
  "heroku",
  "ibm cloud",
  "watson",
  "oracle cloud",
  "asp.net core",
  "numpy",
  "pandas",
  "pytorch",
  "apache spark",
  "yarn",
  "xamarin",
  "unreal",
  "deno",
  "chef",
  "pulumi",
  "notepad++",
  "intellij",
  "atom",
  "macos",
  "windows",
  "f#",
  "stripe",
  "prototyping",
  "linear algebra",
  "statistics",
];

const inFile = "specifics2.json";
const outFile = "analysis2.json";
let jsonData: any[] = [];
let data: { [key: string]: string }[] | null = null;
if (fs.existsSync(inFile)) {
  data = JSON.parse(fs.readFileSync(inFile, { encoding: "utf-8" }));
}

if (!fs.existsSync(outFile)) {
  fs.writeFileSync(outFile, JSON.stringify(jsonData), { encoding: "utf-8" });
}

function escapeRegExp(text: string) {
  return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
}

// console.log(data);

const map = new Map();
const map2 = new Map();

for (let i = 0; i < data!.length; i++) {
  const description = data![i].jobDescription.toLowerCase();
  for (let keyword of keywords) {
    // const word = keyword.toLowerCase();
    // if (description.includes(word)) {
    //   matched.push(word);
    // }
    // console.log("\\b" + escapeRegExp(keyword) + "\\b");
    const re = new RegExp("\\b" + escapeRegExp(keyword) + "(?:es|s)?\\b", "i");
    if (re.test(description)) {
      if (map.has(keyword)) {
        map.set(keyword, map.get(keyword) + 1);
      } else {
        map.set(keyword, 1);
      }
    }

    const re2 = new RegExp(escapeRegExp(keyword), "i");
    if (re2.test(description)) {
      if (map2.has(keyword)) {
        map2.set(keyword, map2.get(keyword) + 1);
      } else {
        map2.set(keyword, 1);
      }
    }
  }
}

const sorted = new Map(
  [...map.entries()].sort((entry1, entry2) => {
    return entry2[1] - entry1[1];
  })
);

console.log(sorted);

const sorted2 = new Map(
  [...map2.entries()].sort((entry1, entry2) => {
    return entry2[1] - entry1[1];
  })
);

console.log(sorted2);
// const foundKeywords = keywords.filter((keyword) => {
//   return description.includes(keyword);
// });
// console.log("INDEX: " + data![i].index, i);
// console.log("DESCRIPTION: " + description);
// console.log("KEYWORDS: " + foundKeywords);

// const appendedData = data!.filter((data, index) => index < 537 || index > 681);
// appendedData.map((data) => console.log(data.index));
// fs.writeFileSync(outFile, JSON.stringify(appendedData), {
//   encoding: "utf-8",
// });
